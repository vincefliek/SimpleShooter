{
  // Settings
  "passfail"      : false,  // Stop on first error.
  "maxerr"        : 100,    // Maximum error before stopping.


  // Predefined globals whom JSHint will ignore.
  "browser"       : true,   // Standard browser globals e.g. `window`, `document`.
  "node"          : true,


  // Development.
  "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
  "devel"         : true,   // Allow developments statements e.g. `console.log();`.


  // ECMAScript 5.
  "esversion"     : 5,      // Allow ECMAScript 5 syntax.
  "strict"        : true,   // Require `use strict` pragma  in every file.
  "globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').


  // The Good Parts.
  "asi"           : false,  // Tolerate Automatic Semicolon Insertion (no semicolons).
  "nonew"         : false,
  "laxbreak"      : false,   // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
  "bitwise"       : true,   // Prohibit bitwise operators (&, |, ^, etc.).
  "boss"          : true,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
  "curly"         : true,   // Require {} for every new block or scope.
  "eqeqeq"        : true,   // Require triple equals i.e. `===`.
  "eqnull"        : false,  // Tolerate use of `== null`.
  "evil"          : false,  // Tolerate use of `eval`.
  "expr"          : false,  // Tolerate `ExpressionStatement` as Programs.
  "forin"         : false,  // Tolerate `for in` loops without `hasOwnPrototype`.
  "latedef"       : "nofunc",   // Prohibit variable use before definition.
  "loopfunc"      : false,  // Allow functions to be defined within loops.
  "noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`.
  "scripturl"     : true,   // Tolerate script-targeted URLs.
  "shadow"        : true,  // Allows re-define variables later in code e.g. `var x=1; x=2;`.
  "supernew"      : false,  // Tolerate `new function () { ... };` and `new Object;`.
  "undef"         : false   // Require all non-global variables be declared before they are used.
}